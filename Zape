-- Roblox Draggable and Resizable UI Library

local DraggableResizableUI = {}

function DraggableResizableUI.newFrame(parent, size, scriptCallback)
    local frame = Instance.new("Frame")
    frame.Parent = parent
    frame.Size = size
    frame.BackgroundColor3 = Color3.new(0.8, 0.8, 0.8)

    local script = Instance.new("LocalScript")
    script.Parent = frame

    -- Execute the script callback inside the frame
    script.Source = "local scriptCallback = " .. tostring(scriptCallback) .. "\nscriptCallback()"

    DraggableResizableUI.makeDraggable(frame)
    DraggableResizableUI.makeResizable(frame)

    return frame
end

function DraggableResizableUI.makeDraggable(frame)
    -- (Same draggable implementation as before)
end

function DraggableResizableUI.makeResizable(frame)
    local resizing
    local startPos
    local startSize

    local function update(input)
        local delta = input.Position - startPos
        frame.Size = UDim2.new(startSize.X.Scale, startSize.X.Offset + delta.X, startSize.Y.Scale, startSize.Y.Offset + delta.Y)
    end

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            resizing = true
            startPos = input.Position
            startSize = frame.Size

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    resizing = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            if resizing then
                update(input)
            end
        end
    end)
end

return DraggableResizableUI
